Todo

	
	fix algorithm problems
		- problem example : '닭고기' and '경희대'
			- probably need a new array containing
			separated characters of compound characters
			^ think about this more later

	Tooltip support / full keyboard support / random typing support
	Additional support to unfortunate individiuals whose shift keys don't work lol
	---
	Design window icons

	make a readme for whatever idk stuff (im stuff)
		- add font credits and stuff when making a readme or smth

	fix the memory problem somehow (idk what's happening nor why it's happening)

	rewrite help popup so it's easier to understand

	fix light mode color scheme

Misc notes
	Figure out whether or not to hardcode the answers

Screen
	Screen size : 400x650 (default), maybe consider 600x975 as an option
	boxes start at 35, 166
	each box is 60x60
	gaps are 10 pixels wide

	Blank box / Wrong letter : 58, 58, 60 (Dark mode) / 234, 235, 237 << only for blank box (edge of blank box has a thickness of 2 pixels)
	Wrong spot : 174, 159, 77
	Correct spot : 101, 139, 85

	Title text : 255, 255, 255	(Dark mode) / 128, 128, 128		(Light mode)
	Normal text: 255, 255, 255	(Dark mode) / 55, 55, 55		(Light mode)
	Game text  : 255, 255, 255	(Dark mode) / 0, 0, 0			(Light mode)
	BG : 18, 18, 19				(Dark mode) / 255, 255, 255		(Light mode)
	Icon color : 235, 235, 235	(Dark mode) / 0, 0, 0			(Light mode)

Variables
	gameStatus (main.cpp)
		0 : Closed
		1 : Running
		2 : Running (Pop-up open)

Graphics
	menuSprites
		0 : Menu
		1 : Close
		2 : Hint
		3 : Stats
		4 : Settings
		5 : Minimize
	(menuRect exclusive)
		6 : Close pop-up
	boxSprites
		0 : Default
		1 : Gray	(Wrong character, wrong location)
		2 : Yellow	(Correct character, wrong location)
		3 : Olive	(Wrong* character, correct location)
		4 : Green	(Correct character, correct location)
		
		* When the wrong character is part of a correct, combined character
		  ex) ㅗ / ㅘ (If correct location, returns olive)

Button codes
	### This does not correlate to menuSprites or menuRect in graphics.h
	### Refer to the 'Graphics' section
   -1 : None
    0 : Menu
	1 : Close (Game)
	2 : Hint
	3 : Stats
	4 : Settings
	5 : Minimize
	6 : Close (Popup)
	10 : Color scheme (Settings)
	11 : Language (Settings)
	12 : Debug mode (Settings)
	13 : Screen size (Settings) 
	14 : Save (Settings)

Colors
	0 : Default
	1 : Gray
	2 : Yellow
	3 : Green

Popup handles
	100 : Input is not 3 characters
	101 : Word is not in dictionary
	200 : Stats
	201 : Help (tutorial)
	202 : Settings

Key codes
	(default) : -1
	ㄱ : 1
	ㄲ : 2
	ㄴ : 3
	ㄷ : 4
	ㄸ : 5
	ㄹ : 6
	ㅁ : 7
	ㅂ : 8
	ㅃ : 9
	ㅅ : 10
	ㅆ : 11
	ㅇ : 12
	ㅈ : 13
	ㅉ : 14
	ㅊ : 15
	ㅋ : 16
	ㅌ : 17
	ㅍ : 18
	ㅎ : 19
	ㅏ : 20
	ㅐ : 21
	ㅑ : 22
	ㅒ : 23
	ㅓ : 24
	ㅔ : 25
	ㅕ : 26
	ㅖ : 27
	ㅗ : 28
	ㅘ : 29
	ㅙ : 30
	ㅚ : 31
	ㅛ : 32
	ㅜ : 33
	ㅝ : 34
	ㅞ : 35
	ㅟ : 36
	ㅠ : 37
	ㅡ : 38
	ㅢ : 39
	ㅣ : 40
	ㄳ : 43
	ㄵ : 45
	ㄶ : 46
	ㄺ : 49
	ㄻ : 50
	ㄼ : 51
	ㄽ : 52
	ㄾ : 53
	ㄿ : 54
	ㅀ : 55
	ㅄ : 58
	Backspace : 98
	Enter : 99
	Escape : 100
	1 (Help button): 101
	2 (Stat button): 102
	3 (Settings button): 103

data.txt
	tries
	playedGames
	maxStreak
	currentStreak
	gamesWon[0]
	...
	gamesWon[5]
	_input[0][0].jamo[0] * 588 + .jamo[1] * 28 + .jamo[2] + 44032
	_input[0][1]
	...
	_input[5][1]
	_input[5][2] (...)			<< if blank _input[], put 0 instead

settings.txt
	fps	// not actually fps, default 60; changing value changes game speed
	iconSize
	lang
	isDarkMode
	debugMode
	lastDay